<?xml version="1.0" encoding="utf-8"?>
<?xyl-overlay href="hoa://Application/Overlays/Article.xyl"?>
<?xyl-meta name="title" value="Hello world!"?>
<?xyl-meta name="date" value="2016-04-16T14:24:49+02:00"?>

<overlay xmlns="http://hoa-project.net/xyl/xylophone">
  <article id="main">
    <p class="abstract">
      This blog post is the first one of a very long serie. Be aware. This post
      explains some basics of Jekxyl, but no worry, this is very easy to
      understand.
    </p>

    <p>This is my first blog post! And we are going to see how it works.</p>

    <h2>Installation</h2>

    <p>
      First, the installation steps.
      <a href="https://getcomposer.org/">Composer</a> is required. We assume it
      is installed and present in the <code>PATH</code>. Thus:
    </p>
    <pre><code class="language-shell">$ composer global require jekxyl/jekxyl</code></pre>
    <p>
      This command will install —by default— Jekxyl in your home. Once the
      <code>bin/jekxyl</code> script in the <code>PATH</code>, we will be able
      to run:
    </p>
    <pre><code class="language-shell">$ jekxyl</code></pre>

    <h2>Basic usage</h2>

    <p>
      First of all, to ease the start of the Web application, one will use the
      <code>jekxyl new</code> command, which expects a directory name to be
      provided:
    </p>
    <pre><code class="language-shell">$ jekxyl new MyProject</code></pre>
    <p>
      Let's see what has been created in the next section, but right now we are
      going to see how to compile these files into a static Web application,
      with the help of the <code>jekxyl compile</code> command, which expects a
      source and a destination (respectively the <code>Source</code> and the
      <code>Dist</code> directories in this particular example):
    </p>
    <pre><code class="language-shell">$ jekxyl compile --source MyProject/Source --destination MyProject/Destination</code></pre>
    <p>
      <em lang="fr">Et voià</em>, a nice <code>MyProject/Dist/index.html</code>
      has been created. Because all links are absolute, to watch the Web
      application with all the comfort, one might use the <code>jekxyl
      serve</code> command to start an HTTP server. This command expects at
      least a root (default is <code>.</code>):
    </p>
    <pre><code class="language-shell">$ jekxyl serve --root MyProject/Dist/
Server is listening MyProject/Dist on 127.0.0.1:8888</code></pre>
    <p>
      Thus, open <a href="http://127.0.0.1:8888"><code>127.0.0.1:8888</code></a>
      in your favorioute browser and see your first Web application with Jekxyl!
    </p>

    <h2>Explore the defaults</h2>

    <pre><code class="language-shell">$ tree MyProject
MyProject
├── Dist
├── README.md
└── Source
    ├── Definitions
    │   └── Math.xyl
    ├── Index.xyl
    ├── Layouts
    │   └── Default.xyl
    ├── Overlays
    │   └── Article.xyl
    ├── Pages
    ├── Posts
    │   └── 2016-04-Hello-world.xyl
    ├── Public
    │   ├── Static
    │   │   ├── Css
    │   │   │   ├── Layout.css
    │   │   │   └── UI.css
    │   │   ├── Font
    │   │   │   └── DroidSansMono.woff
    │   │   │   └── Palladio.woff
    │   │   ├── Image
    │   │   │   ├── Header.jpg
    │   │   │   └── Icon
    │   │   │       └── Circled_plus.svg
    │   │   └── Javascript
    │   ├── atom.xml
    │   └── manifest.webapp
    └── Router.php

14 directories, 15 files</code></pre>
  </article>
</overlay>
